{"version":3,"file":"component---src-pages-index-js-39b2c688497191c226e2.js","mappings":"gRAEMA,EAA4B,CAChC,UACA,UACA,YACA,YACA,YACA,aACA,YACA,aACA,IACA,KAqBWC,EAAgB,WAC3B,OAAgCC,EAAAA,EAAAA,UAAS,GAAlCC,EAAP,KAAiBC,EAAjB,KACA,GAAsCF,EAAAA,EAAAA,WAAS,GAAxCG,EAAP,KAAoBC,EAApB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,SAAC,GAAsB,IAAfC,EAAc,EAAnBC,IACZC,EAxBY,SAAC,GAIlB,IAAD,IAHJC,SAAAA,OAGI,MAHOZ,EAGP,MAFJG,SAAAA,OAEI,MAFO,EAEP,MADJM,QAAAA,OACI,MADM,KACN,EACEI,EAAiBD,EAASE,MAAMX,GAEtC,OAA8B,IAA1BU,EAAeE,SAIfF,EAAe,KAAOJ,IACjBI,EAAeE,OAAS,IAAIZ,EAAW,EAGzC,GASYa,CAAgB,CAAEb,SAAAA,EAAUM,QAAAA,KAChC,IAAXE,EAAkBL,GAAe,GAAQF,EAAYO,IAKvD,OAFAM,SAASC,iBAAiB,UAAWV,GAE9B,kBAAMS,SAASE,oBAAoB,UAAWX,MACpD,CAACL,IAEGE,GC9BHe,GAAQC,EAAAA,EAAAA,SAAOC,EAAAA,GAAV,mEAAGD,CAAH,s1BAyBLE,GAASF,EAAAA,EAAAA,SAAOG,EAAAA,GAAV,oEAAGH,CAAH,6TA0BNI,EAASJ,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,qKAcNK,GAAiBL,EAAAA,EAAAA,SAAOM,EAAAA,GAAV,4EAAGN,CAAH,kDAMdO,EAAW,SAAAC,GAAK,OAAI,gBAACH,EAAD,iBAAoBG,EAApB,CAA2BC,GAAG,QAElDC,EAASV,EAAAA,QAAAA,EAAAA,WAAH,yDAAGA,CAAH,kGAGI,SAAAQ,GAAK,MAAkB,eAAbA,EAAMC,GAAsB,SAAW,YAO3DE,EAAiB,kBACrB,gBAACD,EAAD,KACE,kDADF,iBAC8C,IAC5C,qBAAGE,KAAK,qBAAR,SAFF,8RAUIC,EAAe,WACnB,IAAQC,GAAeC,EAAAA,EAAAA,KAAfD,WASR,OARA5B,EAAAA,EAAAA,YAAU,WACR4B,EAAW,CACTE,SAAU,cACVC,OAAQ,uBACRC,KAAM,mBAEP,IAGD,gBAACR,EAAD,CACED,GAAG,aACHU,KAAK,KACLC,KAAK,8DAHP,2GAOE,gBAACC,EAAD,CACET,KAAK,6DACLU,MAAM,yBACNC,OAAO,UAEP,gBAAC,IAAD,CAAiBC,KAAMC,EAAAA,SAMzBJ,EAAerB,EAAAA,QAAAA,EAAAA,WAAH,+DAAGA,CAAH,2DA8ClB,EAxCkB,SAAC,GAAc,IAAZ0B,EAAW,EAAXA,KACbC,EAAyB/C,IAE/B,OACE,gBAAC,IAAD,CAAQgD,IAAK,gBAAC,IAAD,CAAKN,MAAM,UAAYO,cAAY,GAC9C,gBAAC9B,EAAD,KACG4B,EAAyB,gBAACd,EAAD,MAAmB,gBAACF,EAAD,MAE7C,gBAACP,EAAD,KACE,gBAACG,EAAD,CACEK,KAAK,2BACLU,MAAM,wBACN,aAAW,yBAEX,gBAAC,IAAD,CAAiBE,KAAMM,EAAAA,OAEzB,gBAACvB,EAAD,CACEK,KAAK,sCACLU,MAAM,yBACN,aAAW,0BAEX,gBAAC,IAAD,CAAiBE,KAAMO,EAAAA,OAEzB,gBAACxB,EAAD,CACEK,KAAK,gDACLU,MAAM,0BACN,aAAW,2BAEX,gBAAC,IAAD,CAAiBE,KAAMQ,EAAAA,QAI3B,gBAAC9B,EAAD,CACE+B,MAAOP,EAAKQ,KAAKC,gBAAgBF,MACjCG,IAAI","sources":["webpack://nesk.github.io/./src/components/konami.js","webpack://nesk.github.io/./src/pages/index.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\n\nconst defaultKonamiCodeSequence = [\n  \"ArrowUp\",\n  \"ArrowUp\",\n  \"ArrowDown\",\n  \"ArrowDown\",\n  \"ArrowLeft\",\n  \"ArrowRight\",\n  \"ArrowLeft\",\n  \"ArrowRight\",\n  \"b\",\n  \"a\",\n]\n\nconst sequenceChecker = ({\n  sequence = defaultKonamiCodeSequence,\n  progress = 0,\n  current = null,\n}) => {\n  const slicedSequence = sequence.slice(progress)\n\n  if (slicedSequence.length === 0) {\n    return true\n  }\n\n  if (slicedSequence[0] === current) {\n    return slicedSequence.length > 1 ? progress + 1 : true\n  }\n\n  return 0\n}\n\nexport const useKonamiCode = () => {\n  const [progress, setProgress] = useState(0)\n  const [isTriggered, setIsTriggered] = useState(false)\n\n  useEffect(() => {\n    const listener = ({ key: current }) => {\n      const result = sequenceChecker({ progress, current })\n      result === true ? setIsTriggered(true) : setProgress(result)\n    }\n\n    document.addEventListener(\"keydown\", listener)\n\n    return () => document.removeEventListener(\"keydown\", listener)\n  }, [progress])\n\n  return isTriggered\n}\n","import React, { useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport { graphql } from \"gatsby\"\nimport Img from \"gatsby-image\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n  faGithub,\n  faTwitter,\n  faLinkedinIn,\n} from \"@fortawesome/free-brands-svg-icons\"\nimport { faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\"\nimport { Layout } from \"../components/layout\"\nimport { Content } from \"../components/content\"\nimport { Seo } from \"../components/seo\"\nimport { useMatomo } from \"@datapunt/matomo-tracker-react\"\nimport { IconButton } from \"../components/button\"\nimport { useKonamiCode } from \"../components/konami\"\n\nconst About = styled(Content)`\n  max-width: min(300px, 100%);\n  display: grid;\n  grid-template-rows: [avatar-start] auto [avatar-end social-start] auto [social-end speech-start] auto [speech-end];\n  grid-template-columns: 1fr;\n  grid-row-gap: calc(var(--content-spacing) * 2);\n  justify-items: center;\n  align-items: center;\n\n  @media (min-width: 768px) {\n    max-width: none;\n    height: 100%;\n    grid-template-rows: 1fr [avatar-start speech-start] auto [avatar-end speech-end social-start] auto [social-end] 1fr;\n    grid-template-columns: [avatar-start social-start] 10.5rem [avatar-end social-end speech-start] 27.5rem [speech-end];\n    grid-column-gap: calc(var(--content-spacing) * 2);\n  }\n\n  @media (min-width: 992px) {\n    grid-template-columns: [avatar-start social-start] 13rem [avatar-end social-end speech-start] 35rem [speech-end];\n    grid-row-gap: calc(var(--content-spacing) * 2);\n    grid-column-gap: calc(var(--content-spacing) * 3);\n    font-size: 1.4rem;\n  }\n`\n\nconst Avatar = styled(Img)`\n  grid-area: avatar;\n  border-radius: 9999px;\n  overflow: hidden;\n\n  &::after {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border-radius: inherit;\n    box-shadow: inset 0 0 20px var(--shadow);\n    pointer-events: none;\n    content: \"\";\n  }\n\n  @media (max-width: 767.98px) {\n    width: calc(100% - 4rem);\n  }\n\n  @media (min-width: 768px) {\n    justify-self: stretch;\n  }\n`\n\nconst Social = styled.div`\n  grid-area: social;\n  display: flex;\n  justify-content: space-evenly;\n\n  @media (max-width: 767.98px) {\n    width: calc(100% - 4rem);\n  }\n\n  @media (min-width: 768px) {\n    justify-self: stretch;\n  }\n`\n\nconst StyledIconLink = styled(IconButton)`\n  @media (min-width: 992px) {\n    font-size: 1.75rem;\n  }\n`\n\nconst IconLink = props => <StyledIconLink {...props} as=\"a\" />\n\nconst Speech = styled.p`\n  grid-area: speech;\n  font-size: 1.2rem;\n  font-style: ${props => (props.as === \"blockquote\" ? \"italic\" : \"normal\")};\n\n  @media (min-width: 992px) {\n    font-size: 1.4rem;\n  }\n`\n\nconst OriginalSpeech = () => (\n  <Speech>\n    <em>I'm Johann Pardanaud</em>, developer at{\" \"}\n    <a href=\"https://batch.com\">Batch</a>. I develop technical solutions for\n    back-end and front-end. I love the open source philosophy and try to\n    contribute whenever I have time (and motivation ðŸ˜…). Although my skills are\n    mainly in web development, I appreciate working sometimes with other\n    environments and new languages.\n  </Speech>\n)\n\nconst KonamiSpeech = () => {\n  const { trackEvent } = useMatomo()\n  useEffect(() => {\n    trackEvent({\n      category: \"Konami Code\",\n      action: \"Finish Full Sequence\",\n      name: \"Reddit quote\",\n    })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Speech\n      as=\"blockquote\"\n      lang=\"fr\"\n      cite=\"https://www.reddit.com/r/france/comments/g744c9/a/fofi03m/\"\n    >\n      Loser gauchiste tendance new age qui raconte sa vie sur Twitter et rempli\n      son Github de scripts pourris.\n      <ExternalLink\n        href=\"https://www.reddit.com/r/france/comments/g744c9/a/fofi03m/\"\n        title=\"See the Reddit comment\"\n        target=\"_blank\"\n      >\n        <FontAwesomeIcon icon={faExternalLinkAlt} />\n      </ExternalLink>\n    </Speech>\n  )\n}\n\nconst ExternalLink = styled.a`\n  margin-left: 0.5em;\n  vertical-align: top;\n  font-size: 0.6em;\n`\n\nconst IndexPage = ({ data }) => {\n  const hasTriggeredKonamiCode = useKonamiCode()\n\n  return (\n    <Layout seo={<Seo title=\"About\" />} centeredBody>\n      <About>\n        {hasTriggeredKonamiCode ? <KonamiSpeech /> : <OriginalSpeech />}\n\n        <Social>\n          <IconLink\n            href=\"https://github.com/nesk/\"\n            title=\"See my Github account\"\n            aria-label=\"See my Github account\"\n          >\n            <FontAwesomeIcon icon={faGithub} />\n          </IconLink>\n          <IconLink\n            href=\"https://twitter.com/johannpardanaud\"\n            title=\"See my Twitter account\"\n            aria-label=\"See my Twitter account\"\n          >\n            <FontAwesomeIcon icon={faTwitter} />\n          </IconLink>\n          <IconLink\n            href=\"https://www.linkedin.com/in/johann-pardanaud/\"\n            title=\"See my LinkedIn account\"\n            aria-label=\"See my LinkedIn account\"\n          >\n            <FontAwesomeIcon icon={faLinkedinIn} />\n          </IconLink>\n        </Social>\n\n        <Avatar\n          fluid={data.file.childImageSharp.fluid}\n          alt=\"Johann Pardanaud's avatar\"\n        ></Avatar>\n      </About>\n    </Layout>\n  )\n}\nexport default IndexPage\n\nexport const query = graphql`\n  query AboutQuery {\n    file(relativePath: { eq: \"images/avatar.jpg\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n  }\n`\n"],"names":["defaultKonamiCodeSequence","useKonamiCode","useState","progress","setProgress","isTriggered","setIsTriggered","useEffect","listener","current","key","result","sequence","slicedSequence","slice","length","sequenceChecker","document","addEventListener","removeEventListener","About","styled","Content","Avatar","Img","Social","StyledIconLink","IconButton","IconLink","props","as","Speech","OriginalSpeech","href","KonamiSpeech","trackEvent","useMatomo","category","action","name","lang","cite","ExternalLink","title","target","icon","faExternalLinkAlt","data","hasTriggeredKonamiCode","seo","centeredBody","faGithub","faTwitter","faLinkedinIn","fluid","file","childImageSharp","alt"],"sourceRoot":""}